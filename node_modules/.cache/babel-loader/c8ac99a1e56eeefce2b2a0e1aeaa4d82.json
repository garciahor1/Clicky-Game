{"ast":null,"code":"var _jsxFileName = \"/Users/horaciogarcia/myProjects/clicky-game/src/App.js\";\nimport Jumbotron from './components/Jumbotron';\nimport ImageThumbnail from './components/ImageThumbnail';\nimport React, { Component } from \"react\";\nimport images from \"./images.json\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      images,\n      picked: [],\n      score: 0,\n      topScore: 0\n    };\n\n    this.personAdded = id => {\n      if (this.state.picked.includes(id)) {\n        console.log(\"didnt add\");\n        this.setState({\n          score: 0\n        });\n        this.setState({\n          picked: []\n        });\n      } else {\n        const originalArray = this.state.images;\n        const newArray = [];\n\n        while (originalArray.length > 1) {\n          const ranNumber = Math.floor(Math.random() * originalArray.length + 1);\n          const toNewArray = originalArray[ranNumber];\n          newArray.push(toNewArray);\n          originalArray.pop(ranNumber);\n          console.log(\"new array\" + newArray);\n          console.log(\"\\n\");\n          console.log(\"original array\" + originalArray);\n        }\n\n        this.setState({\n          images: newArray\n        });\n        this.setState({\n          picked: [...this.state.picked, id]\n        });\n        const score = this.state.score + 1;\n\n        if (score > this.state.topScore) {\n          this.setState({\n            topScore: score\n          });\n        }\n\n        ;\n        this.setState({\n          score: score\n        });\n      }\n\n      ;\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      score: this.state.score,\n      topScore: this.state.topScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.state.images.map(item => {\n      return React.createElement(ImageThumbnail, {\n        key: item.id,\n        id: item.id,\n        src: item.image,\n        name: item.name,\n        personAdded: this.personAdded,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      });\n    })))));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/horaciogarcia/myProjects/clicky-game/src/App.js"],"names":["Jumbotron","ImageThumbnail","React","Component","images","App","state","picked","score","topScore","personAdded","id","includes","console","log","setState","originalArray","newArray","length","ranNumber","Math","floor","random","toNewArray","push","pop","render","map","item","image","name"],"mappings":"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","sourcesContent":["\nimport Jumbotron from './components/Jumbotron';\nimport ImageThumbnail from './components/ImageThumbnail';\nimport React, { Component } from \"react\";\nimport images from \"./images.json\";\n\n\nclass App extends Component {\n\n  state = {\n    images,\n    picked: [],\n    score: 0,\n    topScore: 0\n  }\n\n  personAdded = id => {\n    if (this.state.picked.includes(id)) {\n      console.log(\"didnt add\");\n      this.setState({ score: 0 });\n      this.setState({ picked: [] });\n    } else {\n\n      const originalArray = this.state.images;\n      const newArray = [];\n\n      while(originalArray.length>1){\n      const ranNumber = Math.floor(Math.random() * originalArray.length+1);\n      const toNewArray = originalArray[ranNumber];\n      newArray.push(toNewArray);\n      originalArray.pop(ranNumber);\n      console.log(\"new array\" + newArray);\n      console.log(\"\\n\")\n      console.log(\"original array\" + originalArray);\n      }\n      \n      this.setState({images:newArray})\n\n      this.setState({ picked: [...this.state.picked, id] });\n      const score = this.state.score + 1;\n      if (score > this.state.topScore) {\n        this.setState({ topScore: score });\n      };\n      this.setState({ score: score });\n    };\n  };\n\n  render() {\n    return (\n      <div>\n        <Jumbotron score={this.state.score} topScore={this.state.topScore} />\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col\">\n              {this.state.images.map(item => {\n                return (\n                  <ImageThumbnail\n                    key={item.id}\n                    id={item.id}\n                    src={item.image}\n                    name={item.name}\n                    personAdded={this.personAdded} />\n                )\n              })}\n\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}