{"version":3,"sources":["components/Jumbotron.js","components/ImageThumbnail.js","App.js","index.js"],"names":["Jumbotron","props","className","id","score","topScore","ImageThumbnail","onClick","personAdded","src","alt","name","App","state","images","picked","includes","console","log","alert","setState","originalArray","newArray","length","ranNumber","Math","floor","random","toNewArray","push","splice","this","map","item","key","image","Component","ReactDOM","render","document","getElementById"],"mappings":"+QAkBeA,MAff,SAAmBC,GAEjB,OACE,yBAAKC,UAAU,6BACb,yBAAKA,UAAU,aACb,uBAAGC,GAAG,KAAN,+KAEA,wBAAID,UAAU,aAAd,WAAmCD,EAAMG,OACzC,wBAAIF,UAAU,aAAd,eAAuCD,EAAMI,aCHtCC,MANf,SAAwBL,GACpB,OACI,yBAAKM,QAAS,kBAAMN,EAAMO,YAAYP,EAAME,KAAKM,IAAKR,EAAMQ,IAAKC,IAAKT,EAAMU,KAAMT,UAAU,mB,OCuErFU,E,2MAlEbC,MAAQ,CACNC,SACAC,OAAQ,GACRX,MAAO,EACPC,SAAU,G,EAGZG,YAAc,SAAAL,GACZ,GAAI,EAAKU,MAAME,OAAOC,SAASb,GAC7Bc,QAAQC,IAAI,aACZC,MAAM,yDACN,EAAKC,SAAS,CAAEhB,MAAO,IACvB,EAAKgB,SAAS,CAAEL,OAAQ,SACnB,CAKL,IAHA,IAAMM,EAAgB,EAAKR,MAAMC,OAC3BQ,EAAW,GAEVD,EAAcE,OAAS,GAAG,CAC/B,IAAMC,EAAYC,KAAKC,MAAMD,KAAKE,SAAWN,EAAcE,QACrDK,EAAaP,EAAcG,GACjCF,EAASO,KAAKD,GACdP,EAAcS,OAAON,EAAW,GAChCP,QAAQC,IAAII,GACZL,QAAQC,IAAI,MACZD,QAAQC,IAAIG,GAGd,EAAKD,SAAS,CAAEN,OAAQQ,IAExB,EAAKF,SAAS,CAAEL,OAAO,GAAD,mBAAM,EAAKF,MAAME,QAAjB,CAAyBZ,MAC/C,IAAMC,EAAQ,EAAKS,MAAMT,MAAQ,EAC7BA,EAAQ,EAAKS,MAAMR,UACrB,EAAKe,SAAS,CAAEf,SAAUD,IAE5B,EAAKgB,SAAS,CAAEhB,MAAOA,M,wEAIjB,IAAD,OACP,OACE,6BACE,kBAAC,EAAD,CAAWA,MAAO2B,KAAKlB,MAAMT,MAAOC,SAAU0B,KAAKlB,MAAMR,WACzD,yBAAKH,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,OACZ6B,KAAKlB,MAAMC,OAAOkB,KAAI,SAAAC,GAErB,OADAhB,QAAQC,IAAIe,GAEV,kBAAC,EAAD,CACEC,IAAKD,EAAK9B,GACVA,GAAI8B,EAAK9B,GACTM,IAAKwB,EAAKE,MACVxB,KAAMsB,EAAKtB,KACXH,YAAa,EAAKA,yB,GAxDpB4B,aCHlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.e95288fc.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Jumbotron.css\"\n\nfunction Jumbotron(props) {\n\n  return (\n    <div className=\"jumbotron jumbotron-fluid\">\n      <div className=\"container\">\n        <p id=\"p\">Memory game, don’t click on the same image more than once. If you click on the same image more than once your score will be reset to zero, your top score will remain.\n</p>\n        <h1 className=\"display-4\">Score = {props.score}</h1>\n        <h1 className=\"display-4\">Top Score = {props.topScore}</h1>\n      </div>\n    </div>\n  );\n\n}\n\nexport default Jumbotron;","import React from \"react\"\n\nfunction ImageThumbnail(props) {\n    return (\n        <img onClick={() => props.personAdded(props.id)} src={props.src} alt={props.name} className=\"img-thumbnail\"></img>\n    )\n}\n\nexport default ImageThumbnail;","\nimport Jumbotron from './components/Jumbotron';\nimport ImageThumbnail from './components/ImageThumbnail';\nimport React, { Component } from \"react\";\nimport images from \"./images.json\";\n\n\nclass App extends Component {\n\n  state = {\n    images,\n    picked: [],\n    score: 0,\n    topScore: 0\n  }\n\n  personAdded = id => {\n    if (this.state.picked.includes(id)) {\n      console.log(\"didnt add\");\n      alert(\"Winter is coming…\\n\" + \"You clicked on the same image\")\n      this.setState({ score: 0 });\n      this.setState({ picked: [] });\n    } else {\n\n      const originalArray = this.state.images;\n      const newArray = [];\n\n      while (originalArray.length > 0) {\n        const ranNumber = Math.floor(Math.random() * originalArray.length);\n        const toNewArray = originalArray[ranNumber];\n        newArray.push(toNewArray);\n        originalArray.splice(ranNumber, 1);\n        console.log(newArray);\n        console.log(\"\\n\")\n        console.log(originalArray);\n      }\n\n      this.setState({ images: newArray })\n\n      this.setState({ picked: [...this.state.picked, id] });\n      const score = this.state.score + 1;\n      if (score > this.state.topScore) {\n        this.setState({ topScore: score });\n      };\n      this.setState({ score: score });\n    };\n  };\n\n  render() {\n    return (\n      <div>\n        <Jumbotron score={this.state.score} topScore={this.state.topScore} />\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col\">\n              {this.state.images.map(item => {\n                console.log(item)\n                return (\n                  <ImageThumbnail\n                    key={item.id}\n                    id={item.id}\n                    src={item.image}\n                    name={item.name}\n                    personAdded={this.personAdded} />\n                )\n              })}\n\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}